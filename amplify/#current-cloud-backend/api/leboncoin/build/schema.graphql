type Announcement {
  id: ID!
  title: String!
  description: String
  image: String
  price: Int
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelAnnouncementConnection {
  items: [Announcement]
  nextToken: String
}

input ModelStringFilterInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
}

input ModelIDFilterInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
}

input ModelIntFilterInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  contains: Int
  notContains: Int
  between: [Int]
}

input ModelFloatFilterInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  contains: Float
  notContains: Float
  between: [Float]
}

input ModelBooleanFilterInput {
  ne: Boolean
  eq: Boolean
}

input ModelAnnouncementFilterInput {
  id: ModelIDFilterInput
  title: ModelStringFilterInput
  description: ModelStringFilterInput
  image: ModelStringFilterInput
  price: ModelIntFilterInput
  and: [ModelAnnouncementFilterInput]
  or: [ModelAnnouncementFilterInput]
  not: ModelAnnouncementFilterInput
}

type Query {
  getAnnouncement(id: ID!): Announcement
  listAnnouncements(filter: ModelAnnouncementFilterInput, limit: Int, nextToken: String): ModelAnnouncementConnection
}

input CreateAnnouncementInput {
  id: ID
  title: String!
  description: String
  image: String
  price: Int
}

input UpdateAnnouncementInput {
  id: ID!
  title: String
  description: String
  image: String
  price: Int
}

input DeleteAnnouncementInput {
  id: ID
}

type Mutation {
  createAnnouncement(input: CreateAnnouncementInput!): Announcement
  updateAnnouncement(input: UpdateAnnouncementInput!): Announcement
  deleteAnnouncement(input: DeleteAnnouncementInput!): Announcement
}

type Subscription {
  onCreateAnnouncement: Announcement @aws_subscribe(mutations: ["createAnnouncement"])
  onUpdateAnnouncement: Announcement @aws_subscribe(mutations: ["updateAnnouncement"])
  onDeleteAnnouncement: Announcement @aws_subscribe(mutations: ["deleteAnnouncement"])
}
